{"ast":null,"code":"var _jsxFileName = \"C:\\\\C\\\\Github\\\\ekobol\\\\ekobol\\\\frontend\\\\src\\\\context\\\\LanguageContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport tr from '../locales/tr.json';\nimport en from '../locales/en.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = {\n  tr,\n  en\n};\nconst LanguageContext = /*#__PURE__*/createContext(undefined);\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState('tr');\n  const t = useCallback(key => {\n    return translations[language][key] || key;\n  }, [language]);\n  const value = {\n    language,\n    setLanguage,\n    t\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageProvider, \"YRQvu3ZpGJS+XcxOmoHh0igoQXo=\");\n_c = LanguageProvider;\nexport const useLanguage = () => {\n  _s2();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s2(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","tr","en","jsxDEV","_jsxDEV","translations","LanguageContext","undefined","LanguageProvider","children","_s","language","setLanguage","t","key","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","context","Error","$RefreshReg$"],"sources":["C:/C/Github/ekobol/ekobol/frontend/src/context/LanguageContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback, ReactNode } from 'react';\nimport tr from '../locales/tr.json';\nimport en from '../locales/en.json';\n\nconst translations: { [key: string]: { [key: string]: string } } = { tr, en };\n\ninterface LanguageContextType {\n  language: string;\n  setLanguage: (language: string) => void;\n  t: (key: string) => string;\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nexport const LanguageProvider = ({ children }: { children: ReactNode }) => {\n  const [language, setLanguage] = useState('tr');\n\n  const t = useCallback(\n    (key: string) => {\n      return translations[language][key] || key;\n    },\n    [language]\n  );\n\n  const value = {\n    language,\n    setLanguage,\n    t,\n  };\n\n  return (\n    <LanguageContext.Provider value={value}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAmB,OAAO;AAC1F,OAAOC,EAAE,MAAM,oBAAoB;AACnC,OAAOC,EAAE,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAA0D,GAAG;EAAEJ,EAAE;EAAEC;AAAG,CAAC;AAQ7E,MAAMI,eAAe,gBAAGT,aAAa,CAAkCU,SAAS,CAAC;AAEjF,OAAO,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMe,CAAC,GAAGb,WAAW,CAClBc,GAAW,IAAK;IACf,OAAOT,YAAY,CAACM,QAAQ,CAAC,CAACG,GAAG,CAAC,IAAIA,GAAG;EAC3C,CAAC,EACD,CAACH,QAAQ,CACX,CAAC;EAED,MAAMI,KAAK,GAAG;IACZJ,QAAQ;IACRC,WAAW;IACXC;EACF,CAAC;EAED,oBACET,OAAA,CAACE,eAAe,CAACU,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAN,QAAA,EACpCA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACV,EAAA,CArBWF,gBAAgB;AAAAa,EAAA,GAAhBb,gBAAgB;AAuB7B,OAAO,MAAMc,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAGzB,UAAU,CAACO,eAAe,CAAC;EAC3C,IAAI,CAACkB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}