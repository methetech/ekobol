{"ast":null,"code":"var _jsxFileName = \"C:\\\\C\\\\Github\\\\ekobol\\\\ekobol - Copy\\\\frontend\\\\src\\\\context\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  useEffect(() => {\n    // Sayfa ilk yüklendiğinde kullanıcının sistem tercihini veya son seçimini al\n    const savedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\n    setTheme(savedTheme);\n  }, []);\n  useEffect(() => {\n    // Tema değiştiğinde body'e class ekle/kaldır ve localStorage'a kaydet\n    if (theme === 'dark') {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  const value = {\n    theme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"l0NnHMBAjTNA2m05PT0LPL3eOKc=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeProvider","children","_s","theme","setTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","document","body","classList","add","remove","setItem","toggleTheme","prevTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/C/Github/ekobol/ekobol - Copy/frontend/src/context/ThemeContext.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useState,\n  useContext,\n  useEffect,\n  ReactNode,\n} from 'react';\n\ninterface ThemeContextType {\n  theme: string;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const [theme, setTheme] = useState('light');\n\n  useEffect(() => {\n    // Sayfa ilk yüklendiğinde kullanıcının sistem tercihini veya son seçimini al\n    const savedTheme =\n      localStorage.getItem('theme') ||\n      (window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? 'dark'\n        : 'light');\n    setTheme(savedTheme);\n  }, []);\n\n  useEffect(() => {\n    // Tema değiştiğinde body'e class ekle/kaldır ve localStorage'a kaydet\n    if (theme === 'dark') {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  const value = {\n    theme,\n    toggleTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,QAAQ,EACRC,UAAU,EACVC,SAAS,QAEJ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOf,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAE3CE,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,UAAU,GACdC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAC5BC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,GACtD,MAAM,GACN,OAAO,CAAC;IACdN,QAAQ,CAACC,UAAU,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,KAAK,KAAK,MAAM,EAAE;MACpBQ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;IACAT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBb,QAAQ,CAAEc,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,MAAMC,KAAK,GAAG;IACZhB,KAAK;IACLc;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,YAAY,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EAAEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAE3E,CAAC;AAACtB,EAAA,CAnCWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAqC1B,OAAO,MAAM0B,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGlC,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAAC8B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}